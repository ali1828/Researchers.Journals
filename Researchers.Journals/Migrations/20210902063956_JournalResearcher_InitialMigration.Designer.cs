// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Researchers.Journals.Models.Data;

namespace Researchers.Journals.Migrations
{
    [DbContext(typeof(ResearcherJournalDbContext))]
    [Migration("20210902063956_JournalResearcher_InitialMigration")]
    partial class JournalResearcher_InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Researchers.Journals.Models.Journals", b =>
                {
                    b.Property<int>("JournalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("JournalDocument")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("JournalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResearcherID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("JournalID");

                    b.HasIndex("ResearcherID");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("Researchers.Journals.Models.Researcher", b =>
                {
                    b.Property<int>("ResearcherID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ResearcherName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ResearcherID");

                    b.ToTable("Researchers");
                });

            modelBuilder.Entity("Researchers.Journals.Models.Subscribers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JournalID")
                        .HasColumnType("int");

                    b.Property<int>("ResearcherID")
                        .HasColumnType("int");

                    b.Property<int>("SubscriberAsResearcherID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("Researchers.Journals.Models.Journals", b =>
                {
                    b.HasOne("Researchers.Journals.Models.Researcher", "Researcher")
                        .WithMany("Journals")
                        .HasForeignKey("ResearcherID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Researcher");
                });

            modelBuilder.Entity("Researchers.Journals.Models.Researcher", b =>
                {
                    b.Navigation("Journals");
                });
#pragma warning restore 612, 618
        }
    }
}
